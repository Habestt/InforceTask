{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pasha/source/repos/InforceTask/InforceTask/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UrlsService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  getUrls() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get(environment.Url + 'url/getAll');\n    })();\n  }\n\n  deleteUrl(id) {\n    return this.http.delete(environment.Url + 'url/delete/' + id);\n  }\n\n}\n\nUrlsService.ɵfac = function UrlsService_Factory(t) {\n  return new (t || UrlsService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUrlsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UrlsService,\n  factory: UrlsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,SAASA,WAAT,QAA4B,8BAA5B;;;AAIA,OAAM,MAAOC,WAAP,CAAkB;EACtBC,YAAoBC,IAApB,EAAoC;IAAhB;EAAoB;;EAElCC,OAAO;IAAA;;IAAA;MACX,aAAa,KAAI,CAACD,IAAL,CAAUE,GAAV,CAAqBL,WAAW,CAACM,GAAZ,GAAkB,YAAvC,CAAb;IADW;EAEZ;;EAEDC,SAAS,CAACC,EAAD,EAAW;IAClB,OAAO,KAAKL,IAAL,CAAUM,MAAV,CAAiBT,WAAW,CAACM,GAAZ,GAAkB,aAAlB,GAAkCE,EAAnD,CAAP;EACD;;AATqB;;;mBAAXP,aAAWS;AAAA;;;SAAXT;EAAWU,SAAXV,WAAW;EAAAW,YAFV","names":["environment","UrlsService","constructor","http","getUrls","get","Url","deleteUrl","id","delete","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pasha\\source\\repos\\InforceTask\\InforceTask\\ClientApp\\src\\app\\services\\url.service.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Url } from '../global/models/url';\r\nimport { environment } from 'src/environments/environment';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UrlsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async getUrls() {\r\n    return await this.http.get<Url[]>(environment.Url + 'url/getAll');\r\n  }\r\n\r\n  deleteUrl(id: number) {\r\n    return this.http.delete(environment.Url + 'url/delete/' + id);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}