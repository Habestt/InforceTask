{"ast":null,"code":"import { getMyUrls } from 'src/app/url/state/url.selector';\nimport { deleteUrl, loadUrls } from 'src/app/url/state/url.actions';\nimport { setLoadingSpinner } from 'src/app/store/shared/shared.actions';\nimport { getUsersUserName } from 'src/app/auth/state/auth.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\n\nfunction MyUrlsComponent_table_3_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 3);\n    i0.ɵɵtext(7, \"Info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MyUrlsComponent_table_3_tr_10_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const url_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.delete(url_r2));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const url_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(url_r2.originalUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(url_r2.shortUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"state\", url_r2);\n  }\n}\n\nfunction MyUrlsComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 1)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Shorted URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Action\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, MyUrlsComponent_table_3_tr_10_Template, 10, 3, \"tr\", 2);\n    i0.ɵɵpipe(11, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 1, ctx_r0.urls));\n  }\n}\n\nexport class MyUrlsComponent {\n  constructor(store, baseUrl) {\n    this.store = store;\n    this.userName = '';\n    this.baseUrl = baseUrl;\n    this.store.dispatch(setLoadingSpinner({\n      status: true\n    }));\n    this.store.select(getUsersUserName).subscribe(result => this.userName = result);\n  }\n\n  ngOnInit() {\n    this.urls = this.store.select(getMyUrls(this.userName));\n    this.store.dispatch(loadUrls());\n  }\n\n  delete(url) {\n    const id = url.id;\n    this.store.dispatch(deleteUrl({\n      id\n    }));\n  }\n\n}\n\nMyUrlsComponent.ɵfac = function MyUrlsComponent_Factory(t) {\n  return new (t || MyUrlsComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject('BASE_URL'));\n};\n\nMyUrlsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MyUrlsComponent,\n  selectors: [[\"app-my-urls\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"routerLink\", \"/url-info\", 1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"state\"], [\"type\", \"button\", \"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n  template: function MyUrlsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"My URLs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵtemplate(3, MyUrlsComponent_table_3_Template, 12, 3, \"table\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.urls);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAKA,SAASA,SAAT,QAA0B,gCAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,+BAApC;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;;;;;;;;;ICGIC,2BAAqC,CAArC,EAAqC,IAArC;IACMA;IAAqBA;IACzBA;IAAIA;IAAkBA;IACtBA,2BAAI,CAAJ,EAAI,QAAJ,EAAI,CAAJ;IACyFA;IAAIA;IAC1FA;IAAkEA;MAAA;MAAA;MAAA;MAAA,OAASA,qCAAT;IAAoB,CAApB;IAAsBA;IAAMA;;;;;IAJ7FA;IAAAA;IACAA;IAAAA;IAEuEA;IAAAA;;;;;;IAbjFA,iCAA6E,CAA7E,EAA6E,OAA7E,EAA6E,CAA7E,EAA6E,IAA7E,EAA6E,CAA7E,EAA6E,IAA7E;IAGUA;IAAGA;IACPA;IAAIA;IAAWA;IACfA;IAAIA;IAAMA;IAGdA;IACEA;;IAQFA;;;;;IARsBA;IAAAA;;;;ADGxB,OAAM,MAAOC,eAAP,CAAsB;EAK1BC,YACUC,KADV,EAEsBC,OAFtB,EAEqC;IAD3B;IAJV,gBAAmB,EAAnB;IAOE,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKD,KAAL,CAAWE,QAAX,CAAoBP,iBAAiB,CAAC;MAAEQ,MAAM,EAAE;IAAV,CAAD,CAArC;IACA,KAAKH,KAAL,CACGI,MADH,CACUR,gBADV,EAEGS,SAFH,CAEcC,MAAD,IAAa,KAAKC,QAAL,GAAgBD,MAF1C;EAGD;;EAEDE,QAAQ;IACN,KAAKC,IAAL,GAAY,KAAKT,KAAL,CAAWI,MAAX,CAAkBZ,SAAS,CAAC,KAAKe,QAAN,CAA3B,CAAZ;IACA,KAAKP,KAAL,CAAWE,QAAX,CAAoBR,QAAQ,EAA5B;EACD;;EAEDgB,MAAM,CAACC,GAAD,EAAS;IACb,MAAMC,EAAE,GAAWD,GAAG,CAACC,EAAvB;IACA,KAAKZ,KAAL,CAAWE,QAAX,CAAoBT,SAAS,CAAC;MAAEmB;IAAF,CAAD,CAA7B;EACD;;AAxByB;;;mBAAfd,iBAAeD,qDAOhB,UAPgB;AAON;;;QAPTC;EAAee;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd5BpB;MAAIA;MAAOA;MACXA;MACAA;;;;MAAiEA;MAAAA","names":["getMyUrls","deleteUrl","loadUrls","setLoadingSpinner","getUsersUserName","i0","MyUrlsComponent","constructor","store","baseUrl","dispatch","status","select","subscribe","result","userName","ngOnInit","urls","delete","url","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\pasha\\source\\repos\\InforceTask\\InforceTask\\ClientApp\\src\\app\\url\\pages\\my-urls\\my-urls.component.ts","C:\\Users\\pasha\\source\\repos\\InforceTask\\InforceTask\\ClientApp\\src\\app\\url\\pages\\my-urls\\my-urls.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { Url } from '../../../global/models/url';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/app.state';\r\nimport { getMyUrls } from 'src/app/url/state/url.selector';\r\nimport { deleteUrl, loadUrls } from 'src/app/url/state/url.actions';\r\nimport { setLoadingSpinner } from 'src/app/store/shared/shared.actions';\r\nimport { getUsersUserName } from 'src/app/auth/state/auth.selector';\r\n\r\n@Component({\r\n  selector: 'app-my-urls',\r\n  templateUrl: './my-urls.component.html',\r\n})\r\nexport class MyUrlsComponent implements OnInit {\r\n  urls?: Observable<Url[]>;\r\n  userName: string = '';\r\n  baseUrl: string;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    @Inject('BASE_URL') baseUrl: string\r\n  ) {\r\n    this.baseUrl = baseUrl;\r\n    this.store.dispatch(setLoadingSpinner({ status: true }));\r\n    this.store\r\n      .select(getUsersUserName)\r\n      .subscribe((result) => (this.userName = result));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.urls = this.store.select(getMyUrls(this.userName));\r\n    this.store.dispatch(loadUrls());\r\n  }\r\n\r\n  delete(url: Url) {\r\n    const id: number = url.id;\r\n    this.store.dispatch(deleteUrl({ id }));\r\n  }\r\n}\r\n","<h1>My URLs</h1>\r\n<hr />\r\n<table class=\"table table-striped\" aria-labelledby=\"tableLabel\" *ngIf=\"urls\">\r\n  <thead>\r\n    <tr>\r\n      <th>URL</th>\r\n      <th>Shorted URL</th>\r\n      <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let url of urls | async\">\r\n      <td>{{ url.originalUrl }}</td>\r\n      <td>{{ url.shortUrl }}</td>\r\n      <td>\r\n        <button type=\"button\" class=\"btn btn-info btn-sm\" routerLink=\"/url-info\" [state]=\"url\">Info</button\r\n        ><button type=\"button\" class=\"btn btn-danger btn-sm\" type=\"button\" (click)=\"delete(url)\">Delete</button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module"}