{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/url-service\";\nimport * as i2 from \"@angular/common\";\n\nfunction AllUrlsComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllUrlsComponent_table_3_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const url_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(url_r3.originalUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(url_r3.shortUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(url_r3.createdAt);\n  }\n}\n\nfunction AllUrlsComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Shorted URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Created date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, AllUrlsComponent_table_3_tr_10_Template, 7, 3, \"tr\", 3);\n    i0.ɵɵpipe(11, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 1, ctx_r1.urlss));\n  }\n}\n\nexport class AllUrlsComponent {\n  constructor(urlService) {\n    this.urlService = urlService;\n    this.urlss = urlService.entities$;\n    this.loading = urlService.loading$;\n  }\n\n  ngOnInit() {\n    this.getUrls();\n  }\n\n  add(url) {\n    this.urlService.add(url);\n  }\n\n  delete(url) {\n    this.urlService.delete(url.id);\n  }\n\n  getUrls() {\n    this.urlService.getAll();\n  }\n\n  update(url) {\n    this.urlService.update(url);\n  }\n\n}\n\nAllUrlsComponent.ɵfac = function AllUrlsComponent_Factory(t) {\n  return new (t || AllUrlsComponent)(i0.ɵɵdirectiveInject(i1.UrlService));\n};\n\nAllUrlsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllUrlsComponent,\n  selectors: [[\"app-all-urls\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AllUrlsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"All URLs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AllUrlsComponent_p_2_Template, 3, 0, \"p\", 0);\n      i0.ɵɵtemplate(3, AllUrlsComponent_table_3_Template, 12, 3, \"table\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.urlss);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.urlss);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAEAA,0BAAkB,CAAlB,EAAkB,IAAlB;IAAsBA;IAAUA;;;;;;IAW5BA,2BAAsC,CAAtC,EAAsC,IAAtC;IACMA;IAAqBA;IACzBA;IAAIA;IAAkBA;IACtBA;IAAIA;IAAmBA;;;;;IAFnBA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;;;;;;IAZVA,iCAA8E,CAA9E,EAA8E,OAA9E,EAA8E,CAA9E,EAA8E,IAA9E,EAA8E,CAA9E,EAA8E,IAA9E;IAGUA;IAAGA;IACPA;IAAIA;IAAWA;IACfA;IAAIA;IAAYA;IAGpBA;IACEA;;IAKFA;;;;;IALsBA;IAAAA;;;;ACFxB,OAAM,MAAOC,gBAAP,CAAuB;EAI3BC,YAAoBC,UAApB,EAA0C;IAAtB;IAClB,KAAKC,KAAL,GAAaD,UAAU,CAACE,SAAxB;IACA,KAAKC,OAAL,GAAeH,UAAU,CAACI,QAA1B;EACD;;EACDC,QAAQ;IACN,KAAKC,OAAL;EACD;;EAEDC,GAAG,CAACC,GAAD,EAAS;IACV,KAAKR,UAAL,CAAgBO,GAAhB,CAAoBC,GAApB;EACD;;EAEDC,MAAM,CAACD,GAAD,EAAS;IACb,KAAKR,UAAL,CAAgBS,MAAhB,CAAuBD,GAAG,CAACE,EAA3B;EACD;;EAEDJ,OAAO;IACL,KAAKN,UAAL,CAAgBW,MAAhB;EACD;;EAEDC,MAAM,CAACJ,GAAD,EAAS;IACb,KAAKR,UAAL,CAAgBY,MAAhB,CAAuBJ,GAAvB;EACD;;AA1B0B;;;mBAAhBV,kBAAgBD;AAAA;;;QAAhBC;EAAgBe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX7BpB;MAAIA;MAAQA;MAEZA;MAEAA;;;;MAFIA;MAAAA;MAE6DA;MAAAA","names":["i0","AllUrlsComponent","constructor","urlService","urlss","entities$","loading","loading$","ngOnInit","getUrls","add","url","delete","id","getAll","update","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\pasha\\source\\repos\\InforceTask\\InforceTask\\ClientApp\\src\\app\\pages\\all-urls\\all-urls.component.html","C:\\Users\\pasha\\source\\repos\\InforceTask\\InforceTask\\ClientApp\\src\\app\\pages\\all-urls\\all-urls.component.ts"],"sourcesContent":["<h1>All URLs</h1>\r\n\r\n<p *ngIf=\"!urlss\"><em>Loading...</em></p>\r\n\r\n<table class=\"table table-striped\" aria-labelledby=\"tableLabel\" *ngIf=\"urlss\">\r\n  <thead>\r\n    <tr>\r\n      <th>URL</th>\r\n      <th>Shorted URL</th>\r\n      <th>Created date</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let url of urlss | async\">\r\n      <td>{{ url.originalUrl }}</td>\r\n      <td>{{ url.shortUrl }}</td>\r\n      <td>{{ url.createdAt }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { UrlService } from './service/url-service';\r\nimport { Url } from './models/url';\r\n\r\n@Component({\r\n  selector: 'app-all-urls',\r\n  templateUrl: './all-urls.component.html',\r\n})\r\nexport class AllUrlsComponent implements OnInit {\r\n  loading: Observable<boolean>;\r\n  urlss: Observable<Url[]>;\r\n\r\n  constructor(private urlService: UrlService) {\r\n    this.urlss = urlService.entities$;\r\n    this.loading = urlService.loading$;\r\n  }\r\n  ngOnInit() {\r\n    this.getUrls();\r\n  }\r\n\r\n  add(url: Url) {\r\n    this.urlService.add(url);\r\n  }\r\n\r\n  delete(url: Url) {\r\n    this.urlService.delete(url.id);\r\n  }\r\n\r\n  getUrls() {\r\n    this.urlService.getAll();\r\n  }\r\n\r\n  update(url: Url) {\r\n    this.urlService.update(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}