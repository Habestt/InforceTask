{"ast":null,"code":"import { setLoadingSpinner } from 'src/app/store/shared/shared.actions';\nimport { getErrorMessage } from 'src/app/store/shared/shared.selector';\nimport { loginStart } from '../../state/auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction LogInComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r8 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r8, \"\\n\");\n  }\n}\n\nfunction LogInComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LogInComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LogInComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LogInComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"Password must be contain at least 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class LogInComponent {\n  constructor(store) {\n    this.store = store;\n    this.errorMessage = this.store.select(getErrorMessage);\n  }\n\n  logIn(form) {\n    const email = form.email;\n    const password = form.password;\n    this.store.dispatch(setLoadingSpinner({\n      status: true\n    }));\n    this.store.dispatch(loginStart({\n      email,\n      password\n    }));\n  }\n\n}\n\nLogInComponent.ɵfac = function LogInComponent_Factory(t) {\n  return new (t || LogInComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nLogInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LogInComponent,\n  selectors: [[\"app-log-in\"]],\n  decls: 26,\n  vars: 8,\n  consts: [[\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [\"logInForm\", \"ngForm\"], [1, \"mb-3\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"email\", \"ngModel\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"password\", \"ngModel\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [1, \"error\"]],\n  template: function LogInComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r9 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵtemplate(0, LogInComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"h3\");\n      i0.ɵɵtext(5, \"Log in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"hr\");\n      i0.ɵɵelementStart(7, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LogInComponent_Template_form_ngSubmit_7_listener() {\n        i0.ɵɵrestoreView(_r9);\n\n        const _r1 = i0.ɵɵreference(8);\n\n        return i0.ɵɵresetView(ctx.logIn(_r1.value));\n      });\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\");\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6, 7);\n      i0.ɵɵtemplate(14, LogInComponent_span_14_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtemplate(15, LogInComponent_span_15_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\");\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9, 10);\n      i0.ɵɵtemplate(21, LogInComponent_span_21_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtemplate(22, LogInComponent_span_22_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 11)(24, \"button\", 12);\n      i0.ɵɵtext(25, \" Log in \");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(8);\n\n      const _r2 = i0.ɵɵreference(13);\n\n      const _r5 = i0.ɵɵreference(20);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 6, ctx.errorMessage));\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", (_r2.errors == null ? null : _r2.errors.required) && _r2.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r2.errors == null ? null : _r2.errors.email) && _r2.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (_r5.errors == null ? null : _r5.errors.required) && _r5.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r5.errors == null ? null : _r5.errors.minlength) && _r5.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", _r1.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.EmailValidator, i3.NgModel, i3.NgForm, i2.AsyncPipe],\n  styles: [\".error[_ngcontent-%COMP%] {\\r\\n  color: rgb(212, 33, 33);\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZy1pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0FBQ3pCIiwiZmlsZSI6ImxvZy1pbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yIHtcclxuICBjb2xvcjogcmdiKDIxMiwgMzMsIDMzKTtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,iBAAT,QAAkC,qCAAlC;AACA,SAASC,eAAT,QAAgC,sCAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;;;;;;ICNAC;IACEA;IACFA;;;;;IADEA;IAAAA;;;;;;IAmBMA;IACGA;IAAiBA;;;;;;IAEpBA;IACGA;IAAgBA;;;;;;IAgBnBA;IACGA;IAAoBA;;;;;;IAEvBA;IACGA;IAA+CA;;;;AD/B1D,OAAM,MAAOC,cAAP,CAAqB;EAGzBC,YAAoBC,KAApB,EAA0C;IAAtB;IAClB,KAAKC,YAAL,GAAoB,KAAKD,KAAL,CAAWE,MAAX,CAAkBP,eAAlB,CAApB;EACD;;EAEDQ,KAAK,CAACC,IAAD,EAAU;IACb,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;IACA,MAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAtB;IACA,KAAKN,KAAL,CAAWO,QAAX,CAAoBb,iBAAiB,CAAC;MAAEc,MAAM,EAAE;IAAV,CAAD,CAArC;IACA,KAAKR,KAAL,CAAWO,QAAX,CAAoBX,UAAU,CAAC;MAAES,KAAF;MAASC;IAAT,CAAD,CAA9B;EACD;;AAZwB;;;mBAAdR,gBAAcD;AAAA;;;QAAdC;EAAcW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MCb3BhB;;MAGAA,+BAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,IAAjB;MAEQA;MAAMA;MACVA;MACAA;MAA0BA;QAAAA;;QAAA;;QAAA,OAAYA,oCAAZ;MAAkC,CAAlC;MACxBA,+BAAkB,EAAlB,EAAkB,OAAlB;MACSA;MAAKA;MACZA;MAUAA;MAGAA;MAGFA;MAEAA,gCAAkB,EAAlB,EAAkB,OAAlB;MACSA;MAAQA;MACfA;MAUAA;MAGAA;MAGFA;MACAA,iCAA0B,EAA1B,EAA0B,QAA1B,EAA0B,EAA1B;MAMIA;MACFA;;;;;;;;;;MAtDyBA;MAoBJA;MAAAA;MAGAA;MAAAA;MAiBAA;MAAAA;MAGAA;MAAAA;MAQnBA;MAAAA","names":["setLoadingSpinner","getErrorMessage","loginStart","i0","LogInComponent","constructor","store","errorMessage","select","logIn","form","email","password","dispatch","status","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\pasha\\source\\repos\\InforceTask\\InforceTask\\ClientApp\\src\\app\\auth\\pages\\log-in\\log-in.component.ts","C:\\Users\\pasha\\source\\repos\\InforceTask\\InforceTask\\ClientApp\\src\\app\\auth\\pages\\log-in\\log-in.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AppState } from 'src/app/store/app.state';\r\nimport { setLoadingSpinner } from 'src/app/store/shared/shared.actions';\r\nimport { getErrorMessage } from 'src/app/store/shared/shared.selector';\r\nimport { loginStart } from '../../state/auth.actions';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css'],\r\n})\r\nexport class LogInComponent {\r\n  errorMessage: Observable<string>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n    this.errorMessage = this.store.select(getErrorMessage);\r\n  }\r\n\r\n  logIn(form: any) {\r\n    const email = form.email;\r\n    const password = form.password;\r\n    this.store.dispatch(setLoadingSpinner({ status: true }));\r\n    this.store.dispatch(loginStart({ email, password }));\r\n  }\r\n}\r\n","<div class=\"alert alert-danger\" *ngIf=\"errorMessage | async as error\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-6 offset-md-3\">\r\n    <h3>Log in</h3>\r\n    <hr />\r\n    <form #logInForm=\"ngForm\" (ngSubmit)=\"logIn(logInForm.value)\">\r\n      <div class=\"mb-3\">\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          ngModel\r\n          name=\"email\"\r\n          class=\"form-control\"\r\n          required\r\n          email\r\n          #email=\"ngModel\"\r\n          placeholder=\"Enter email\"\r\n        />\r\n        <span class=\"error\" *ngIf=\"email.errors?.required && email.touched\"\r\n          >Email is required</span\r\n        >\r\n        <span class=\"error\" *ngIf=\"email.errors?.email && email.touched\"\r\n          >Email is invalid</span\r\n        >\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          ngModel\r\n          name=\"password\"\r\n          class=\"form-control\"\r\n          required\r\n          minlength=\"6\"\r\n          #password=\"ngModel\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <span class=\"error\" *ngIf=\"password.errors?.required && password.touched\"\r\n          >Password is required</span\r\n        >\r\n        <span class=\"error\" *ngIf=\"password.errors?.minlength && password.touched\"\r\n          >Password must be contain at least 6 characters.</span\r\n        >\r\n      </div>\r\n      <div class=\"d-grid gap-2\">\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary\"\r\n          [disabled]=\"logInForm.invalid\"\r\n        >\r\n          Log in\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}